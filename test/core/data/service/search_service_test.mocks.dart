// Mocks generated by Mockito 5.1.0 from annotations
// in is_it_safe_app/test/core/data/service/search_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:is_it_safe_app/core/data/service/register/register_contract.dart'
    as _i2;
import 'package:is_it_safe_app/core/data/service/search/search_contract.dart'
    as _i5;
import 'package:is_it_safe_app/core/model/Gender.dart';
import 'package:is_it_safe_app/core/model/Location.dart';
import 'package:is_it_safe_app/core/model/SexualOrientation.dart';
import 'package:is_it_safe_app/core/model/User.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [RegisterContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegisterContract extends _i1.Mock implements _i2.RegisterContract {
  MockRegisterContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>> registerUser({_i4.User? user}) =>
      (super.noSuchMethod(Invocation.method(#registerUser, [], {#user: user}),
              returnValue: Future<dynamic>.value())
          as _i3.Future<Map<String, dynamic>>);
  @override
  _i3.Future<List<Gender>> getGenders() =>
      (super.noSuchMethod(Invocation.method(#getGenders, []),
          returnValue: Future<dynamic>.value()) as _i3.Future<List<Gender>>);
  @override
  _i3.Future<List<SexualOrientation>> getSexualOrientations() =>
      (super.noSuchMethod(Invocation.method(#getSexualOrientations, []),
              returnValue: Future<dynamic>.value())
          as _i3.Future<List<SexualOrientation>>);
}

/// A class which mocks [SearchContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchContract extends _i1.Mock implements _i5.SearchContract {
  @override
  _i3.Future<List<Content>> getLocation(String? search) =>
      (super.noSuchMethod(Invocation.method(#getLocation, [search]),
          returnValue: Future<dynamic>.value()) as _i3.Future<List<Content>>);
}
