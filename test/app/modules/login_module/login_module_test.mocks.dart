// Mocks generated by Mockito 5.2.0 from annotations
// in is_it_safe_app/test/app/modules/login_module/login_module_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:is_it_safe_app/core/data/service/login/login_contract.dart'
    as _i2;
import 'package:is_it_safe_app/core/utils/config/custom_shared_preferences_contract.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [LoginContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginContract extends _i1.Mock implements _i2.LoginContract {
  MockLoginContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>> doLogin(
          {String? username, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #doLogin, [], {#username: username, #password: password}),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i3.Future<Map<String, dynamic>>);
}

/// A class which mocks [CustomSharedPreferencesContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomSharedPreferencesContract extends _i1.Mock
    implements _i4.CustomSharedPreferencesContract {
  MockCustomSharedPreferencesContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void saveUsuarioOnBoarding(dynamic value) =>
      super.noSuchMethod(Invocation.method(#saveUsuarioOnBoarding, [value]),
          returnValueForMissingStub: null);
  @override
  _i3.Future<bool> readUsuarioOnBoarding() =>
      (super.noSuchMethod(Invocation.method(#readUsuarioOnBoarding, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  void saveUsuario(dynamic value) =>
      super.noSuchMethod(Invocation.method(#saveUsuario, [value]),
          returnValueForMissingStub: null);
  @override
  _i3.Future<bool> readUsuario() =>
      (super.noSuchMethod(Invocation.method(#readUsuario, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  void saveUsuarioToken(dynamic value) =>
      super.noSuchMethod(Invocation.method(#saveUsuarioToken, [value]),
          returnValueForMissingStub: null);
  @override
  _i3.Future<String?> readUsuarioToken() =>
      (super.noSuchMethod(Invocation.method(#readUsuarioToken, []),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
  @override
  void saveUsuarioRefreshToken(dynamic value) =>
      super.noSuchMethod(Invocation.method(#saveUsuarioRefreshToken, [value]),
          returnValueForMissingStub: null);
  @override
  _i3.Future<String?> readUsuarioRefreshToken() =>
      (super.noSuchMethod(Invocation.method(#readUsuarioRefreshToken, []),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
}
